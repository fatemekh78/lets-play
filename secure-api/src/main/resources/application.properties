spring.application.name=secure-api
# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/user_product_db
spring.jackson.mapper.accept-case-insensitive-enums=true
# Server Port
server.port=8080

# JWT Secret Key (use a long, random, and secure string in a real application)
jwt.secret=hh2gS4+0vg3EjQFdJ1pqKsJphfG3zRlLFJUFCIwtV+c=
bucket4j.enabled=false

# Filter for /api/auth/login
bucket4j.filters[0].cache-name=buckets
bucket4j.filters[0].url=^/api/auth/login.*
bucket4j.filters[0].strategy=FIRST
bucket4j.filters[0].rate-limits[0].bandwidths[0].capacity=10
bucket4j.filters[0].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[0].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[0].rate-limits[0].key=getRemoteAddr()

# Filter for /api/.*
bucket4j.filters[1].cache-name=buckets
bucket4j.filters[1].url=^/api/.*
bucket4j.filters[1].strategy=FIRST
bucket4j.filters[1].rate-limits[0].bandwidths[0].capacity=100
bucket4j.filters[1].rate-limits[0].bandwidths[0].time=1
bucket4j.filters[1].rate-limits[0].bandwidths[0].unit=minutes
bucket4j.filters[1].rate-limits[0].key=getAuthentication().getName()